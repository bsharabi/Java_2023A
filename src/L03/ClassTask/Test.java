package L03.ClassTask;

// יצירת תבנית חדשה בשם טסט או ניתן גם להגיד שיצרנו טיפוס נתונים חדש בשם טסט
public class Test {
    // יצירת שדות נתונים השיכים למחלקה, כלומר הגישה לשדות הללו הם רק דרך שם המחלקה. בנוסף כל שדה השייך למחלקה הוא שדה יחיד (נוצר פעם אחת לאורך כל התוכנית) ואין קשר בינו לבין האוביקטים שנוצרים מטיפוס המחלקה
    private static int count=0;
    // באופן זהה ניתן לומר זאת גם על פעולות המחלקה
    public static void func_of_class(){
    }
    static int getCount(){
        return count;
    }
    static int addCount(){
        return count;
    }
    // שדות המחלקה המוגדרים ללא המילה השמורה static הם שדות השיכיים לאוביקט שנוצר מטיפוס המחלקה, בכל פעם שנוצר אובייקט חדש אז יוצרים שדות חדשים השיכיים לאוביקט שנוצר כלומר לכל אוביקט יש את השדות שלו.
    public int size;
    public int[] arr;

    // בנאי המחלקה מוגדר להיות פרטי או ציבורי (לרוב נבחר בציבורי) ושמו זהה לשם המחלקה. תפקידו של הבנאי הוא לאתחל את השדות ולהחזיר מצביע לאובייקט שנוצר.
    // הבחנו בין סוגים שונים של בנאים (בנאי ריק, בנאי עם פרמטר יחיד, בנאי עם מספר פרמטרים) ולזה קראנו העמסת בנאים, בתהליך בניית אובייקט אנו מאפשרים לבחור את הבנאי בו נרצה להשתמש לבנית האוביקט
    public Test(){

    }
    public Test(int size){
    this.size=size;
    arr=new int[10];
    }

    // פונקציות האובייקט הן פונקציות שחתימתן לא כוללת את המילה השמורה static וניתן לגשת אליהן רק באמצעות שם האובייקט אותו יצרתם באמצעות טיפוס המחלקה.
    public void func_of_object(){
        count++;
    }
    // פונקציות המוגדרות בשם get ומיד לאחר מכן שם של שדה מסוים נקראות פונקציות הgeters של האובייקט ותפקידם להחזיר את ערך השדה המבוקש. השימוש בפונקציות אלה הם כחלק מההכמסה של המחלקה והסתרת המידע
    public int getSize() {
        return size;
    }
    // פונקציות המוגדרות בשם set ומיד לאחר מכן שם של שדה מסוים נקראות פונקציות setter של האובייקט ותפקידם לבצע השמה/עדכון של ערך השדה המבוקש. השימוש בפונקציות אלה הם כחלק מההכמסה של המחלקה, הסתרת המידע ובדיקת תקינות הקלט טרם השמתו בשדה.
    public void setSize(int size) {
        this.size = size;
    }


}
